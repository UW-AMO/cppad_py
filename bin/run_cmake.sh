#! /bin/bash -e
# -----------------------------------------------------------------------------
#         cppad_swig: A C++ Object Library and SWIG Interface to CppAD
#          Copyright (C) 2017-17 Bradley M. Bell (bradbell@seanet.com)
#              This program is distributed under the terms of the
#          GNU Affero General Public License version 3.0 or later see
#                     http://www.gnu.org/licenses/agpl.txt
# -----------------------------------------------------------------------------
# $OMhelpKeyCharacter=@
#
# @begin run_cmake.sh@@  @newlinech #@@
# @spell
#	Makefiles
#	Rel
#	CppAD
#	cppad
#	cmake
#	hpp
#	cxx
#	Wno
#	makefile
# @@
#
# @section Configure cppad_swig for A system@@
#
# @head Syntax@@
# @codei%bin/run_cmake.sh%@@
#
# @head File@@
# The choices below are made by editing this file which,
# relative to the top @code cppad_swig@@ directory, is
# @code bin/run_cmake.sh@@.
#
# @head cmake_generator@@
# This determines the type of make files that will be generated by
# @code cmake@@; see
# @href%https://cmake.org/cmake/help/v3.0/manual/cmake-generators.7.html%
#	cmake-generators%@@.
# An example setting is
# @codep
cmake_generator='Unix Makefiles'
# @@
#
# @head cmake_verbose_makefile@@
# This is either @code true@@ or @code false@@.
# If it is true, many of the compiler and @code swig@@ options used to
# build the system are output during the @code make@@ commands.
# If it is false, the output during the make commands just describes
# whats is being done without so much detail.
# @codep
cmake_verbose_makefile='false'
# @@
#
# @head cmake_build_type@@
# This is either @code Debug@@, @code Release@@, @code RelWithDebInfo@@
# or @code MinSizeRel@@; see
# @href%https://cmake.org/cmake/help/v3.0/variable/CMAKE_BUILD_TYPE.html%
#	cmake_build_type%@@.
# @codep
cmake_build_type='debug'
# @@
#
# @head cppad_prefix@@
# The prefix used to install CppAD.
# For example, the following include file must exist
# @codei%
#	%cppad_prefix%/include/cppad.hpp
# %@@
# @codep
cppad_prefix="$HOME/prefix/cppad"
# @@
#
# @head cppad_cxx_flags@@
# Extra C++ compiler flags used when compiling code that includes CppAD
# header files:
# @codep
cppad_cxx_flags='-Wall -pedantic-errors'
# @@
#
# @head swig_cxx_flags@@
# Extra C++ compiler flags used when compiling code that is created
# by @code swig@@:
# @codep
swig_cxx_flags='-Wall -Wno-sign-compare'
# @@
#
# @end
# -----------------------------------------------------------------------------
# bash function that echos and executes a command
echo_eval() {
	echo $*
	eval $*
}
# -----------------------------------------------------------------------------
if [ "$0" != "bin/run_cmake.sh" ]
then
	echo "bin/run_cmake.sh: must be executed from its parent directory"
	exit 1
fi
# -----------------------------------------------------------------------------
if [ ! -e build ]
then
	echo_eval mkdir build
fi
echo_eval cd build
# -----------------------------------------------------------------------------
#
cmake \
	-G "$cmake_generator" \
	-D CMAKE_VERBOSE_MAKEFILE="$cmake_verbose_makefile" \
	-D CMAKE_BUILD_TYPE="$cmake_build_type" \
	-D cppad_prefix="$cppad_prefix" \
	-D cppad_cxx_flags="$cppad_cxx_flags" \
	-D swig_cxx_flags="$swig_cxx_flags" \
	..
# -----------------------------------------------------------------------------
echo 'bin/run_cmake.sh: OK'
exit 0
