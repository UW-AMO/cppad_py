-------------------------------------------------------------------------------
          cppad_swig: A C++ Object Library and Swig Interface to Cppad
           Copyright (C) 2017-17 Bradley M. Bell (bradbell@seanet.com)
               This program is distributed under the terms of the
               GNU General Public License version 3.0 or later see
                     https://www.gnu.org/licenses/gpl-3.0.txt
-------------------------------------------------------------------------------
$begin cppad_swig$$
$comment -------------------------------------------------------------
default automatic indexing command for all cppad_swig documentaiton
$$
$aindex section head subhead$$
$comment -------------------------------------------------------------
Latex macros used throughout Cppad Swig documentation
$$
$latex
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }
$$
$comment -------------------------------------------------------------$$
$spell
	https
	bradbell
	usr
	Cppad
	Linux
	msys
	perl
	Cppad
	cmake
	Github
	xam
$$

$section cppad_swig-20180309: A C++ AD Library with a Swig Interface$$

$head Purpose$$
Provide Algorithmic Differentiation (AD),
for any $href%http://www.Swig.org%Swig%$$ scripting language,
using a C++ object library that connects some of the features of
$href%https://www.coin-or.org/Cppad%Cppad%$$.
This interface is limited by the fact that it is for any
scripting language and for C++.
It is expected that one will write special purpose wrapping operations,
in each particular language, to make a more natural interface for that
language.
For example, in Python, one might create
$href%http://www.numpy.org/%numpy%$$ versions of the
$cref vector$$ classes.

$head Getting Started$$
The following is a good place to see what the interface is for
the currently supported languages:
$cref/C++/a_fun_jacobian_xam.cpp/$$,
$cref/Octave/a_fun_jacobian_xam.m/$$,
$cref/Perl/a_fun_jacobian_xam.pm/$$,
$cref/Python/a_fun_jacobian_xam.py/$$.

$head C++ Function Speed$$
One can use Cppad Swig to get faster function evaluation in scripting languages,
when the sequence of floating point operations does not depend on the
independent variables.
Once an $cref a_fun$$ is recorded, zero order
$cref/forward mode/a_fun_forward/$$ can be used to
effectively evaluate the function in C++ instead of the scripting language.

$head Supporting Packages$$
The
$href%https://www.coin-or.org/CppAD/%Cppad%$$ package is automatically
installed by $cref run_cmake.sh$$.
The following packages are not automatically installed:

$subhead Required$$
$href%https://en.wikipedia.org/wiki/C++%C++%$$,
$href%https://cmake.org%Cmake%$$,
$href%https://git-scm.com%Git%$$,
$href%https://www.gnu.org/software/m4/m4.html%m4%$$,
$href%http://www.swig.org%Swig%$$,

$subhead Optional$$
$href%https://www.gnu.org/software/octave/#install%Octave%$$,
$href%https://www.perl.org/get.html%Perl%$$,
$href%https://www.python.org/%Python%$$


$head Source Directory$$
This is a preliminary version of this package.
Currently, one gets the source code from Github at
$href%https://github.com/bradbell/cppad_swig%cppad_swig%$$.
The corresponding directory is referred to as the source directory.
For example, if one uses the command
$codei%
	git clone https://github.com/bradbell/cppad_swig cppad_swig.git
%$$
the source directory is $code cppad_swig.git$$.

$head Support$$
As yet, there is no install procedure for this package.
Part of the problem here is that it would be different for different
scripting languages.
Contact the
$href%http://www.seanet.com/~bradbell/home.htm%author%$$
if you are working with a particular language
and have need of an install procedure or other support.

$head License$$
This program is distributed under the terms of the
    GNU General Public License version 3.0 or later see
$href%http://www.gnu.org/licenses/gpl-3.0.txt%gpl-3.0.txt%$$.

$children%
	testing.omh%
	swig_xam/swig_xam.i%
	lib/library.omh%
	whats_new/2018.omh
%$$
$head Contents$$
$table
$rref testing$$
$rref swig_xam.i$$
$rref library$$
$rref whats_new_2018$$
$tend


$end
