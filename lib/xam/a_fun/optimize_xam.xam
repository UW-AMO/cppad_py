include(xam.m4)dnl this comments out end of line character
Header_(a_fun/optimize_xam.xam)
C_ -----------------------------------------------------------------------------
C_         cppad_swig: A C++ Object Library and Swig Interface to Cppad
C_          Copyright (C) 2017-17 Bradley M. Bell (bradbell@seanet.com)
C_              This program is distributed under the terms of the
C_          GNU Affero General Public License version 3.0 or later see
C_                     http://www.gnu.org/licenses/agpl.txt
C_ -----------------------------------------------------------------------------
C_ a_fun_optimize_xam
C_ -----------------------------------------------------------------------------
C_ BEGIN SOURCE
BeginBoolFun_(ok, a_fun_optimize_xam)
	NewVar_(size_t, n_ind, 1) C_ number of independent variables
	NewVar_(size_t, n_dep, 1) C_ number of dependent variables
	NewVar_(size_t, n_var, 1) C_ phantom variable at address 0
	NewVar_(size_t, n_op, 1)  C_ special operator at beginning
	C_
	C_ dimension some vectors
	NewVar_(vec_double, x, ModuleCtor_(vec_double)(Var_(n_ind)))
	NewVar_(vec_a_double, ay, ModuleCtor_(vec_a_double)(Var_(n_dep)))
	C_
	C_ independent variables
	VecSet_(x, 0, 1.0)
	NewVar_(vec_a_double, ax, Module_(independent)(Var_(x)))
	Assign_(n_var, Var_(n_var) + Var_(n_ind)) C_ one for each indpendent
	Assign_(n_op,  Var_(n_op) + Var_(n_ind))
	C_
	C_ accumulate summation
	NewVar_(a_double, ax0, VecGet_(ax, 0))
	NewVar_(a_double, csum, ModuleCtor_(a_double)(0.0))
	Assign_(csum, Var_(ax0) + Var_(ax0) + Var_(ax0) + Var_(ax0))
	Assign_(n_var, Var_(n_var) + 3) C_ one per + operator
	Assign_(n_op, Var_(n_op) + 3)
	C_
	C_ define f(x) = y_0 = csum
	VecSet_(ay, 0, Var_(csum))
	NewVar_(a_fun, af, ModuleCtor_(a_fun)(Var_(ax), Var_(ay)))
	Assign_(n_op, Var_(n_op) + 1) C_ speical operator at end
	C_
	C_ check number of variables and operators
	AndAssign_(ok, Member_(af, size_var)() == Var_(n_var))
	AndAssign_(ok, Member_(af, size_op)() == Var_(n_op))
	C_
	C_ optimize
	Member_(af, optimize)()Eos_
	C_
	C_ number of variables and operators has decreased by two
	AndAssign_(ok, Member_(af, size_var)() == Var_(n_var)-2)
	AndAssign_(ok, Member_(af, size_op)() == Var_(n_op)-2)
	C_
	Return_( ok )
End_
C_ END SOURCE
C_ -----------------------------------------------------------------------------
Omhelp_(a_fun_optimize_xam,
LangName_: Optimize an a_fun: Example and Test)
Eof_
