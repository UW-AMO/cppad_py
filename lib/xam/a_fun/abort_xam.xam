include(xam.m4)dnl this comments out end of line character
Header_(a_fun/abort_xam.xam)
C_ -----------------------------------------------------------------------------
C_         cppad_swig: A C++ Object Library and Swig Interface to Cppad
C_          Copyright (C) 2017-17 Bradley M. Bell (bradbell@seanet.com)
C_              This program is distributed under the terms of the
C_          GNU Affero General Public License version 3.0 or later see
C_                     http://www.gnu.org/licenses/agpl.txt
C_ -----------------------------------------------------------------------------
C_ std::vector<a_double>
C_ -----------------------------------------------------------------------------
C_ BEGIN SOURCE
BeginBoolFun_(ok, a_fun_abort_xam)
	NewVar_(size_t, n, 2)
	C_
	C_ create ax
	NewVar_(vec_double, x, ModuleCtor_(vec_double)(Var_(n)))
	For_(i, Var_(n) )
		VecSet_(x, Var_(i), Var_(i) + 1.0)
	End_
	NewVar_(vec_a_double, ax, Module_(independent)(Var_(x)))
	C_
	C_ preform some a_double operations
	NewVar_(a_double, ax0, VecGet_(ax, 0))
	NewVar_(a_double, ax1, VecGet_(ax, 1))
	NewVar_(a_double, ay, Var_(ax0) + Var_(ax1))
	C_
	C_ check that ay is a variable; its value depends on the value of ax
	AndAssign_(ok, Member_(ay, variable)())
	C_
	C_ abort this recording
	Module_(abort_recording)()Eos_
	C_
	C_ check that ay is now a parameter, no longer a variable.
	AndAssign_(ok, Member_(ay, parameter)())
	C_
	C_ since it is a parameter, we can retrieve its value
	NewVar_(double, y, Member_(ay, value)())
	C_
	C_ its value should be x0 + x1
	AndAssign_(ok, Var_(y)  == VecGet_(x, 0) + VecGet_(x, 1))
	C_
	C_ an abort when not recording has no effect
	Module_(abort_recording)()Eos_
	C_
	Return_(ok)
End_
C_ END SOURCE
C_
Omhelp_(a_fun_abort_xam,
LangName_: Abort Recording a_double Operations: Example and Test)
Eof_
