include(xam.m4)dnl this comments out end of line character
Header_(`a_double/unary_fun_xam.xam')
C_ -----------------------------------------------------------------------------
C_         cppad_py: A C++ Object Library and Python Interface to Cppad
C_          Copyright (C) 2017-18 Bradley M. Bell (bradbell@seanet.com)
C_              This program is distributed under the terms of the
C_              GNU General Public License version 3.0 or later see
C_                    https://www.gnu.org/licenses/gpl-3.0.txt
C_ -----------------------------------------------------------------------------
C_ a_double unary operators
C_ -----------------------------------------------------------------------------
C_ BEGIN SOURCE
C_ This test fails in Octave and so is skipped by make check_lib_octave
BeginBoolFun_(ok, a_double_unary_fun_xam)
	C_
	C_ fabs
	NewVar_(a_double, one,  ModuleCtor_(a_double)(1.0))
	NewVar_(a_double, abs_one,  Member_(one, fabs)())
	AndAssign_(ok, Member_(abs_one,  value)() == 1.0)
	C_
	C_ pi/4
	NewVar_(a_double, pi_4, Member_(one, atan)())
	C_
	C_ sqrt(2)
	NewVar_(a_double, tmp,  ModuleCtor_(a_double)(2.0))
	NewVar_(a_double, r2, Member_(tmp, sqrt)())
	C_
	C_ sin(pi/4)  * sqrt(2) = 1.0;
	Assign_(tmp, Var_(r2) * Member_(pi_4, sin)() )
	AndAssign_(ok, Member_(tmp, near_equal)(Var_(one)) )
	C_
	C_ cos(pi/4)  * sqrt(2) = 1.0;
	Assign_(tmp, Var_(r2) * Member_(pi_4, cos)() )
	AndAssign_(ok, Member_(tmp, near_equal)(Var_(one)) )
	C_
	C_ tan(pi/4)  = 1.0;
	Assign_(tmp, Member_(pi_4, tan)() )
	AndAssign_(ok, Member_(tmp, near_equal)(Var_(one)) )
	C_
	Return_(ok)
End_
C_ END SOURCE
C_
Omhelp_(a_double_unary_fun_xam,
LangName_: a_double Unary Functions with AD Result: Example and Test)
Eof_
