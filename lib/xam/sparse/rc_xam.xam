include(xam.m4)dnl this comments out end of line character
Header_(sparse/sparse_rc.xam)
C_ -----------------------------------------------------------------------------
C_         cppad_swig: A C++ Object Library and Swig Interface to Cppad
C_          Copyright (C) 2017-17 Bradley M. Bell (bradbell@seanet.com)
C_              This program is distributed under the terms of the
C_              GNU General Public License version 3.0 or later see
C_                    https://www.gnu.org/licenses/gpl-3.0.txt
C_ -----------------------------------------------------------------------------
C_ sparse_rc
C_ -----------------------------------------------------------------------------
C_ BEGIN SOURCE
BeginBoolFun_(ok, sparse_rc_xam)
	C_
	C_ create a sparsity pattern
	NewVar_(sparse_rc, pattern, ModuleCtor_(sparse_rc)())
	C_
	NewVar_(int, nr,  6)
	NewVar_(int, nc,  5)
	NewVar_(int, nnz, 4)
	C_
	C_ resize
	Member_(pattern, resize)(Var_(nr), Var_(nc), Var_(nnz))Eos_
	C_
	AndAssign_(ok, Member_(pattern, nr)()  == Var_(nr) )
	AndAssign_(ok, Member_(pattern, nc)()  == Var_(nc) )
	AndAssign_(ok, Member_(pattern, nnz)() == Var_(nnz) )
	C_
	C_ indices corresponding to upper-diagonal
	For_(k, Var_(nnz))
		Member_(pattern, put)(Var_(k), Var_(k), Var_(k)+1)Eos_
	End_
	C_
	C_ row and column indices
	NewVar_(vec_int, row, Member_(pattern, row)())
	NewVar_(vec_int, col, Member_(pattern, col)())
	C_
	C_ check row and column indices
	For_(k, Var_(nnz))
		NewVar_(int, r, VecGet_(row, Var_(k)))
		AndAssign_(ok, Var_(r) == Var_(k))
		NewVar_(int, c, VecGet_(col, Var_(k)))
		AndAssign_(ok, Var_(c) == Var_(k)+1)
	End_
	C_
	Return_(ok)
End_
C_ END SOURCE
C_
Omhelp_(sparse_rc_xam,
LangName_: Sparsity Patterns: Example and Test)
Eof_
