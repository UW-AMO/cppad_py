-------------------------------------------------------------------------------
          cppad_py: A C++ Object Library and Python Interface to Cppad
           Copyright (C) 2017-18 Bradley M. Bell (bradbell@seanet.com)
               This program is distributed under the terms of the
               GNU General Public License version 3.0 or later see
                     https://www.gnu.org/licenses/gpl-3.0.txt
-------------------------------------------------------------------------------
$begin py_jac_sparsity$$
$spell
	af
	Jacobian
	jac
	bool
	const
	rc
	cpp
$$

$section Jacobian Sparsity Patterns$$

$head Syntax$$
$icode%af%.for_jac_sparsity(%pattern_in%, %pattern_out%)
%$$
$icode%af%.rev_jac_sparsity(%pattern_in%, %pattern_out%)%$$

$head Purpose$$
We use $latex F : \B{R}^n \rightarrow \B{R}^m$$ to denote the
function corresponding to the operation sequence stored in $icode af$$.

$subhead for_jac_sparsity$$
Fix $latex R \in \B{R}^{n \times \ell}$$ and define the function
$latex \[
	J(x) = F^{(1)} ( x ) * R
\] $$
Given a sparsity pattern for $latex R$$,
$code for_jac_sparsity$$ computes a sparsity pattern for $latex J(x)$$.

$subhead rev_jac_sparsity$$
Fix $latex R \in \B{R}^{\ell \times m}$$ and define the function
$latex \[
	J(x) = R * F^{(1)} ( x )
\] $$
Given a sparsity pattern for $latex R$$,
$code rev_jac_sparsity$$ computes a sparsity pattern for $latex J(x)$$.

$head x$$
Note that a sparsity pattern for $latex J(x)$$ corresponds to the
operation sequence stored in $icode af$$ and does not depend on
the argument $icode x$$.

$head af$$
This object must have been returned by a previous call to the python
$cref/a_fun/py_a_fun_ctor/$$ constructor.
The object $icode af$$ is not constant when using
$code for_jac_sparsity$$.
After a call to $code for_jac_sparsity$$, a sparsity pattern
for each of the variables in the operation sequence
is held in $icode af$$ for possible later use during
reverse Hessian sparsity calculations.

$head pattern_in$$
This argument must have be a $cref/pattern/py_sparse_rc/pattern/$$
returned by the $code sparse_rc$$ constructor.
It specifies the sparsity pattern for $latex R$$.

$head pattern_out$$
This argument must have be a $cref/pattern/py_sparse_rc/pattern/$$
returned by the $code sparse_rc$$ constructor.
This input value of $icode pattern_out$$ does not matter.
Upon return $icode pattern_out$$ is a sparsity pattern for
$latex J(x)$$.

$head Sparsity for Entire Jacobian$$
Suppose that $latex R$$ is the identity matrix.
In this case, $icode pattern_out$$ is a sparsity pattern for
$latex F^{(1)} ( x )$$.

$children%
	lib/example/python/sparse_jac_pattern_xam.py
%$$
$head Example$$
$cref/Python/sparse_jac_pattern_xam.py/$$

$end
